{
  "name": "integrationworkbench",
  "displayName": "Integration Workbench",
  "description": "A workbench tool to work with API integrations.",
  "version": "0.9.4",
  "license": "GPL-3.0",
  "publisher": "norasoderlund",
  "engines": {
    "vscode": "^1.82.0"
  },
  "categories": [
    "Debuggers",
    "Testing",
    "Other"
  ],
  "author": {
    "name": "Nora SÃ¶derlund",
    "email": "norasoderlund@icloud.com",
    "url": "https://nora-soderlund.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nora-soderlund/IntegrationWorkbench"
  },
  "icon": "media/icon.png",
  "activationEvents": ["onStartupFinished"],
  "main": "./build/app/extension.js",
  "contributes": {
    "configuration": {
      "title": "Integration Workbenches",
      "properties": {
        "norasoderlund.integrationworkbench.allowRequestsInWorkbench": {
          "type": "boolean",
          "default": false,
          "description": "Allow requests to be created in the root level of a workbench, outside of any collections."
        },
        "norasoderlund.integrationworkbench.retainResponsesAmount": {
          "type": "number",
          "default": 50,
          "description": "How many responses to retain in the responses panel, excluding saved responses."
        },
        "norasoderlund.integrationworkbench.retainResponsesDuration": {
          "type": [
            "number",
            "null"
          ],
          "default": null,
          "description": "How long a response should be kept in the editor before clearing it out on the next refresh."
        },
        "norasoderlund.integrationworkbench.showRunRequestButton": {
          "type": "boolean",
          "default": true,
          "description": "If a run button should be shown inline with each request within a workbench."
        }
      }
    },
    "commands": [
      {
        "command": "norasoderlund.integrationworkbench.openWalkthrough",
        "title": "Open Walkthrough"
      },
      {
        "command": "norasoderlund.integrationworkbench.createWorkbench",
        "title": "Create a Workbench",
        "icon": "$(plus)"
      },
      {
        "command": "norasoderlund.integrationworkbench.editWorkbenchName",
        "title": "Edit workbench name",
        "shortTitle": "Edit name",
        "icon": "$(pencil)"
      },
      {
        "command": "norasoderlund.integrationworkbench.editWorkbenchDescription",
        "title": "Edit workbench description",
        "shortTitle": "Edit description",
        "icon": "$(pencil)"
      },
      {
        "command": "norasoderlund.integrationworkbench.deleteWorkbench",
        "title": "Delete workbench",
        "shortTitle": "Delete",
        "icon": "$(trashcan)"
      },
      {
        "command": "norasoderlund.integrationworkbench.createCollection",
        "title": "Create a Collection",
        "icon": "$(new-folder)"
      },
      {
        "command": "norasoderlund.integrationworkbench.editCollectionName",
        "title": "Edit collection name",
        "shortTitle": "Edit name",
        "icon": "$(pencil)"
      },
      {
        "command": "norasoderlund.integrationworkbench.editCollectionDescription",
        "title": "Edit collection description",
        "shortTitle": "Edit description",
        "icon": "$(pencil)"
      },
      {
        "command": "norasoderlund.integrationworkbench.runWorkbench",
        "title": "Run all",
        "icon": "$(run)"
      },
      {
        "command": "norasoderlund.integrationworkbench.runCollection",
        "title": "Run all",
        "icon": "$(run)"
      },
      {
        "command": "norasoderlund.integrationworkbench.deleteCollection",
        "title": "Delete collection",
        "shortTitle": "Delete",
        "icon": "$(trashcan)"
      },
      {
        "command": "norasoderlund.integrationworkbench.createRequest",
        "title": "Create a Request",
        "icon": "$(new-file)"
      },
      {
        "command": "norasoderlund.integrationworkbench.editRequestName",
        "title": "Edit request name",
        "shortTitle": "Edit name",
        "icon": "$(pencil)"
      },
      {
        "command": "norasoderlund.integrationworkbench.deleteRequest",
        "title": "Delete request",
        "shortTitle": "Delete",
        "icon": "$(trashcan)"
      },
      {
        "command": "norasoderlund.integrationworkbench.runRequest",
        "title": "Run",
        "icon": "$(run)"
      },
      {
        "command": "norasoderlund.integrationworkbench.deleteResponse",
        "title": "Delete Response",
        "icon": "$(trashcan)"
      },
      {
        "command": "norasoderlund.integrationworkbench.cancelResponse",
        "title": "Cancel Request",
        "icon": "$(chrome-close)"
      },
      {
        "command": "norasoderlund.integrationworkbench.editRequest",
        "title": "Edit Request",
        "icon": "$(gear)"
      },
      {
        "command": "norasoderlund.integrationworkbench.refreshWorkbenches",
        "title": "Refresh the integration workbench"
      },
      {
        "command": "norasoderlund.integrationworkbench.dev.createWorkbenches",
        "title": "(Dev) Create workbenches"
      },
      {
        "command": "norasoderlund.integrationworkbench.dev.removeWorkbenches",
        "title": "(Dev) Remove workbenches"
      },
      {
        "command": "norasoderlund.integrationworkbench.createScript",
        "title": "Create a Script",
        "icon": "$(new-file)"
      },
      {
        "command": "norasoderlund.integrationworkbench.editScriptName",
        "title": "Edit script name",
        "shortTitle": "Edit name",
        "icon": "$(pencil)"
      },
      {
        "command": "norasoderlund.integrationworkbench.deleteScriptDeclarations",
        "title": "Delete all script declarations",
        "icon": "$(trashcan)"
      },
      {
        "command": "norasoderlund.integrationworkbench.deleteScript",
        "title": "Delete script",
        "shortTitle": "Delete",
        "icon": "$(trashcan)"
      },
      {
        "command": "norasoderlund.integrationworkbench.createEnvironment",
        "title": "Create an Environment",
        "icon": "$(plus)"
      },
      {
        "command": "norasoderlund.integrationworkbench.editEnvironmentName",
        "title": "Edit environment name",
        "shortTitle": "Edit name",
        "icon": "$(pencil)"
      },
      {
        "command": "norasoderlund.integrationworkbench.editEnvironmentDescription",
        "title": "Edit environment description",
        "shortTitle": "Edit description",
        "icon": "$(pencil)"
      },
      {
        "command": "norasoderlund.integrationworkbench.deleteEnvironment",
        "title": "Delete environment",
        "shortTitle": "Delete",
        "icon": "$(trashcan)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "workbench",
          "title": "Integration Workbench",
          "icon": "media/icon.png"
        }
      ],
      "panel": [
        {
          "id": "results",
          "title": "Responses",
          "icon": "media/icon.png"
        }
      ]
    },
    "views": {
      "workbench": [
        {
          "id": "workbenches",
          "name": "Workbenches"
        },
        {
          "id": "scripts",
          "name": "Scripts"
        },
        {
          "id": "environments",
          "name": "Environments"
        }
      ],
      "results": [
        {
          "id": "requests",
          "name": "Requests",
          "icon": "media/icon.png",
          "contextualTitle": "Requests",
          "initialSize": 0
        },
        {
          "id": "response",
          "name": "Response",
          "icon": "media/icon.png",
          "contextualTitle": "Response",
          "type": "webview",
          "initialSize": 1
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "workbenches",
        "contents": "No workbenches yet! Create your first one to get started.\n[Create a Workbench](command:norasoderlund.integrationworkbench.createWorkbench)\n[Open the walkthrough](command:norasoderlund.integrationworkbench.openWalkthrough) to learn how Integration Workbench works."
      },
      {
        "view": "scripts",
        "contents": "No scripts yet! Create your first one to get started.\n[Create a Script](command:norasoderlund.integrationworkbench.createScript)\n[Open the walkthrough](command:norasoderlund.integrationworkbench.openScriptsWalkthrough) to learn how scripts works."
      },
      {
        "view": "environments",
        "contents": "No environments yet! Create your first one to get started.\n[Create an Environment](command:norasoderlund.integrationworkbench.createEnvironment)\n[Open the walkthrough](command:norasoderlund.integrationworkbench.openEnvironmentsWalkthrough) to learn how environments works."
      },
      {
        "view": "requests",
        "contents": "No requests has been made in this session yet!"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "norasoderlund.integrationworkbench.createWorkbench",
          "when": "view == workbenches",
          "group": "navigation"
        },
        {
          "command": "norasoderlund.integrationworkbench.createScript",
          "when": "view == scripts",
          "group": "navigation"
        },
        {
          "command": "norasoderlund.integrationworkbench.createEnvironment",
          "when": "view == environments",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "norasoderlund.integrationworkbench.runWorkbench",
          "when": "view == workbenches && (viewItem == workbench)",
          "group": "workbench@1"
        },
        {
          "command": "norasoderlund.integrationworkbench.editWorkbenchName",
          "when": "view == workbenches && (viewItem == workbench)",
          "group": "workbench@2"
        },
        {
          "command": "norasoderlund.integrationworkbench.editWorkbenchDescription",
          "when": "view == workbenches && (viewItem == workbench)",
          "group": "workbench@3"
        },
        {
          "command": "norasoderlund.integrationworkbench.deleteWorkbench",
          "when": "view == workbenches && (viewItem == workbench)",
          "group": "workbench@4"
        },
        {
          "command": "norasoderlund.integrationworkbench.createCollection",
          "when": "view == workbenches && viewItem == workbench",
          "group": "inline"
        },
        {
          "command": "norasoderlund.integrationworkbench.runCollection",
          "when": "view == workbenches && (viewItem == collection)",
          "group": "collection@1"
        },
        {
          "command": "norasoderlund.integrationworkbench.editCollectionName",
          "when": "view == workbenches && (viewItem == collection)",
          "group": "collection@2"
        },
        {
          "command": "norasoderlund.integrationworkbench.editCollectionDescription",
          "when": "view == workbenches && (viewItem == collection)",
          "group": "collection@3"
        },
        {
          "command": "norasoderlund.integrationworkbench.deleteCollection",
          "when": "view == workbenches && (viewItem == collection)",
          "group": "collection@4"
        },
        {
          "command": "norasoderlund.integrationworkbench.createRequest",
          "when": "view == workbenches && ((config.norasoderlund.integrationworkbench.allowRequestsInWorkbench && viewItem == workbench) || viewItem == collection)",
          "group": "inline"
        },
        {
          "command": "norasoderlund.integrationworkbench.runRequest",
          "when": "view == workbenches && (viewItem == request) && config.norasoderlund.integrationworkbench.showRunRequestButton",
          "group": "inline"
        },
        {
          "command": "norasoderlund.integrationworkbench.runRequest",
          "when": "view == workbenches && (viewItem == request) && !config.norasoderlund.integrationworkbench.showRunRequestButton",
          "group": "request@1"
        },
        {
          "command": "norasoderlund.integrationworkbench.editRequestName",
          "when": "view == workbenches && (viewItem == request)",
          "group": "request@2"
        },
        {
          "command": "norasoderlund.integrationworkbench.deleteRequest",
          "when": "view == workbenches && (viewItem == request)",
          "group": "request@3"
        },
        {
          "command": "norasoderlund.integrationworkbench.cancelResponse",
          "when": "view == requests && viewItem == response-loading",
          "group": "inline"
        },
        {
          "command": "norasoderlund.integrationworkbench.deleteResponse",
          "when": "view == requests && (viewItem == response-done || viewItem == response-failed)",
          "group": "inline"
        },
        {
          "command": "norasoderlund.integrationworkbench.editScriptName",
          "when": "view == scripts && (viewItem == script)",
          "group": "script@1"
        },
        {
          "command": "norasoderlund.integrationworkbench.deleteScript",
          "when": "view == scripts && (viewItem == script)",
          "group": "script@2"
        },
        {
          "command": "norasoderlund.integrationworkbench.editEnvironmentName",
          "when": "view == environments && (viewItem == environment)",
          "group": "environment@2"
        },
        {
          "command": "norasoderlund.integrationworkbench.editEnvironmentDescription",
          "when": "view == environments && (viewItem == environment)",
          "group": "environment@3"
        },
        {
          "command": "norasoderlund.integrationworkbench.deleteEnvironment",
          "when": "view == environments && (viewItem == environment)",
          "group": "environment@4"
        }
      ],
      "editor/title": [
        {
          "command": "norasoderlund.integrationworkbench.editRequest",
          "when": "activeWebviewPanelId == norasoderlund.integrationworkbench.request",
          "group": "navigation"
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "workbenches",
        "title": "Get started with workbenches",
        "description": "Discover how to work with workbenches.",
        "steps": [
          {
            "id": "openWorkbenches",
            "title": "Open your workbenches",
            "description": "A workbench is where you construct your collections of requests and configure shared configurations such as authentications.\n[Focus on Workbenches](command:workbenches.focus)",
            "media": {
              "image": "resources/walkthrough/test.png",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onView:workbenches"
            ]
          },
          {
            "id": "createWorkbench",
            "title": "Create a workbench",
            "description": "Create your first workbench for your repository or project.\n[Create a Workbench](command:norasoderlund.integrationworkbench.createWorkbench)",
            "media": {
              "image": "resources/walkthrough/test.png",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onCommand:norasoderlund.integrationworkbench.createWorkbench"
            ]
          },
          {
            "id": "createCollection",
            "title": "Create a collection",
            "description": "Create your first collection of requests to divide your workbench into several parts.\n[Create a Collection](command:norasoderlund.integrationworkbench.createCollection)",
            "media": {
              "image": "resources/walkthrough/test.png",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onCommand:norasoderlund.integrationworkbench.createCollection"
            ]
          }
        ]
      }
    ]
  },
  "scripts": {
    "start": "react-scripts start",
    "vscode:prepublish": "node ./scripts/build-non-split.js && tsc -p tsconfig.extension.json && tsc-alias -p tsconfig.extension.json",
    "build": "node ./scripts/build-non-split.js && tsc -p tsconfig.extension.json && tsc-alias -p tsconfig.extension.json"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.3",
    "@types/node": "18.x",
    "@types/react": "^18.2.36",
    "@types/react-dom": "^18.2.14",
    "@types/vscode": "^1.82.0",
    "@types/vscode-webview": "^1.57.3",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "@vscode/test-electron": "^2.3.6",
    "@vscode/vsce": "^2.22.0",
    "eslint": "^8.52.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "monaco-editor": "^0.44.0",
    "monaco-editor-webpack-plugin": "^7.1.0",
    "react-scripts": "^5.0.1",
    "rewire": "^7.0.0",
    "tsc-alias": "^1.8.8"
  },
  "dependencies": {
    "@monaco-editor/react": "^4.6.0",
    "@vscode/codicons": "^0.0.35",
    "@vscode/webview-ui-toolkit": "^1.2.2",
    "dotenv": "^16.3.1",
    "esbuild": "^0.19.8",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "typescript": "^5.2.2",
    "typescript-bundle": "^1.0.18"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
